{"version":3,"sources":["appRedux/actions/Patient.js","../node_modules/@ant-design/icons-svg/es/asn/MinusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusCircleOutlined.js","routes/SamplePage/Addpatient.js"],"names":["addPatient","values","dispatch","a","type","FETCH_START","axios","post","PROD","FETCH_SUCCESS","message","success","errors","response","data","error","console","log","getPatients","get","res","GET_ALL_PATIENTS","payload","addToConvo","id","name","conditions","allConditions","map","index","push","getConvoList","GET_CONVO_LIST","startingConversation","CARE_PLAN_FOR_PATIENT","getConversation","adminId","patientId","CONVO_PATIENT_ADMIN","addConversation","messageFrom","suggestionAdd","Suggestion","getSuggestions","SUGGESTIONS_PATIENT_ADMIN","MinusCircleOutlined","props","ref","React","AntdIcon","Object","assign","icon","MinusCircleOutlinedSvg","displayName","layout","labelCol","span","wrapperCol","tailLayout","offset","Addpatient","useDispatch","title","initialValues","remember","onFinish","onFinishFailed","errorInfo","style","fontSize","gutter","xs","sm","md","lg","className","Item","label","required","List","rules","validator","_","names","length","Promise","reject","Error","fields","add","remove","field","key","validateTrigger","whitespace","noStyle","placeholder","width","onClick","PlusOutlined","ErrorList","htmlType"],"mappings":"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","file":"static/js/7.4cc26325.chunk.js","sourcesContent":["import {\n    CARE_PLAN_FOR_PATIENT,\n    CONVO_PATIENT_ADMIN,\n    FETCH_ERROR,\n    FETCH_START,\n    FETCH_SUCCESS,\n    GET_ALL_PATIENTS,\n    GET_CONVO_LIST,\n    HIDE_MESSAGE,\n    INIT_URL,\n    PROD,\n    SHOW_MESSAGE,\n    SIGNOUT_USER_SUCCESS,\n    SUGGESTIONS_PATIENT_ADMIN,\n    USER_DATA,\n    USER_TOKEN_SET\n} from \"../../constants/ActionTypes\";\nimport axios from 'util/Api'\nimport { message } from \"antd\";\n\n\nexport const addPatient = values => async dispatch => {\n\n    try {\n        dispatch({ type: FETCH_START });\n\n        const res = await axios.post(`${PROD}/patient/addpatient`, values)\n\n\n\n        if (res) {\n\n            dispatch({ type: FETCH_SUCCESS });\n            message.success(\"Patient Added\")\n        }\n    } catch (err) {\n        const errors = err.response.data;\n        message.error(errors);\n\n        console.log(\"Error****:\", errors);\n    }\n}\n\n\n\nexport const getPatients = values => async dispatch => {\n\n    try {\n        dispatch({ type: FETCH_START });\n\n        const res = await axios.get(`${PROD}/patient/getallpatients`)\n\n\n\n        if (res) {\n\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch({ type: GET_ALL_PATIENTS, payload: res.data })\n        }\n    } catch (err) {\n        const errors = err?.response?.data;\n        message.error(errors);\n\n        console.log(\"Error****:\", errors);\n    }\n}\n\n\nexport const addToConvo = (id, name, conditions) => async dispatch => {\n\n    try {\n        dispatch({ type: FETCH_START });\n\n        let allConditions = [];\n        conditions.map((data, index) => (\n\n            allConditions.push(data)\n\n\n        ))\n        const values = {\n            \"userId\": id,\n            \"patientName\": name,\n            \"Conditions\": allConditions\n\n        }\n\n        const res = await axios.post(`${PROD}/patient/addtoconversation`, values)\n\n\n\n        if (res) {\n\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch(getConvoList())\n            message.success(\"Patient Added\")\n        }\n    } catch (err) {\n        const errors = err?.response?.data;\n        message.error(errors);\n\n        console.log(\"Error****:\", errors);\n    }\n}\n\n\n\n\nexport const getConvoList = values => async dispatch => {\n\n    try {\n        dispatch({ type: FETCH_START });\n\n        const res = await axios.get(`${PROD}/patient/getconversationlist`)\n\n\n\n        if (res) {\n\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch({ type: GET_CONVO_LIST, payload: res.data })\n        }\n    } catch (err) {\n        const errors = err?.response?.data;\n        message.error(errors);\n\n        console.log(\"Error****:\", errors);\n    }\n}\n\n\nexport const startingConversation = id => async dispatch => {\n\n    try {\n        dispatch({ type: FETCH_START });\n\n        const res = await axios.post(`${PROD}/patient/beginconversation`, { id })\n\n        if (res) {\n            dispatch({ type: FETCH_SUCCESS });\n\n            dispatch({ type: CARE_PLAN_FOR_PATIENT, payload: res.data })\n        }\n    } catch (err) {\n        const errors = err?.response?.data?.message;\n        message.error(errors);\n\n        console.log(\"Error****:\", errors);\n    }\n}\n\n\nexport const getConversation = (adminId, patientId) => async dispatch => {\n\n    try {\n        dispatch({ type: FETCH_START });\n\n        const res = await axios.post(`${PROD}/patient/getconversation`, { adminId, patientId })\n\n        if (res) {\n            dispatch({ type: FETCH_SUCCESS });\n\n            dispatch({ type: CONVO_PATIENT_ADMIN, payload: res.data })\n        }\n    } catch (err) {\n        const errors = err?.response?.data?.message;\n        message.error(errors);\n\n        console.log(\"Error****:\", errors);\n    }\n}\n\nexport const addConversation = (adminId, patientId, messageFrom, message) => async dispatch => {\n\n    try {\n        dispatch({ type: FETCH_START });\n\n        const res = await axios.post(`${PROD}/patient/addconversation`, { adminId, patientId, messageFrom, message })\n\n        if (res) {\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch(getConversation(adminId, patientId))\n\n\n        }\n    } catch (err) {\n        const errors = err?.response?.data?.message;\n        message.error(errors);\n\n        console.log(\"Error****:\", errors);\n    }\n}\n\n\nexport const suggestionAdd = (adminId, patientId, Suggestion) => async dispatch => {\n\n    try {\n        dispatch({ type: FETCH_START });\n\n        const res = await axios.post(`${PROD}/users/addsuggestion`, { adminId, patientId, Suggestion })\n\n        if (res) {\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch(getSuggestions(adminId, patientId))\n\n\n        }\n    } catch (err) {\n        const errors = err?.response?.data?.message;\n        message.error(errors);\n\n        console.log(\"Error****:\", errors);\n    }\n}\n\nexport const getSuggestions = (adminId, patientId) => async dispatch => {\n\n    try {\n        dispatch({ type: FETCH_START });\n\n        const res = await axios.post(`${PROD}/users/getsuggestion`, { adminId, patientId })\n\n        if (res) {\n            dispatch({ type: FETCH_SUCCESS });\n\n            dispatch({ type: SUGGESTIONS_PATIENT_ADMIN, payload: res.data })\n        }\n    } catch (err) {\n        const errors = err?.response?.data?.message;\n        message.error(errors);\n\n        console.log(\"Error****:\", errors);\n    }\n}\n","// This icon file is generated automatically.\nvar MinusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"minus-circle\", \"theme\": \"outlined\" };\nexport default MinusCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusCircleOutlined = function MinusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MinusCircleOutlinedSvg\n  }));\n};\n\nMinusCircleOutlined.displayName = 'MinusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusCircleOutlined);","import React, { Fragment } from 'react'\nimport { Form, Input, Button, Checkbox, Card, Row, Col, message } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport TextArea from 'antd/lib/input/TextArea';\nimport axios from 'util/Api'\nimport { useDispatch } from 'react-redux';\nimport { addPatient } from '../../appRedux/actions';\n\n\n\nconst layout = {\n    labelCol: {\n        span: 10\n    },\n    wrapperCol: {\n        span: 20\n    }\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\n\n\n\nfunction Addpatient() {\n    const dispatch = useDispatch()\n    const onFinish = (values) => {\n        console.log('Success:', values);\n        dispatch(addPatient(values))\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <Fragment>\n            <Card title=\"Add patients\">\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    initialValues={{\n                        remember: true,\n                    }}\n\n                    layout=\"horizontal\"\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <label style={{ fontSize: \"20px\" }} >Personal Details</label>\n                    <br />\n                    <br />\n\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                        <Col className='gutter-row' span={10}>\n                            <Form.Item\n                                label=\"Patient Name\"\n                                name=\"PatientName\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Street Address\"\n                                name=\"StreetAddress\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Mailing Address\"\n                                name=\"MailingAddress\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Home Phone\"\n                                name=\"HomePhone\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Work Phone\"\n                                name=\"WorkPhone\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n                        </Col>\n\n                        <Col className='gutter-row' span={10}>\n\n                            <Form.Item\n                                label=\"Date of birth\"\n                                name=\"DOB\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Martial Status\"\n                                name=\"MartialStatus\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"SocialSecurityNumber\"\n                                name=\"SSN\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Email\"\n                                name=\"Email\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <label style={{ fontSize: \"20px\" }} >Insurance Information</label>\n                    <br />\n                    <br />\n\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                        <Col className='gutter-row' span={10}>\n                            <Form.Item\n                                label=\"Primary Insurance\"\n                                name=\"PrimaryInsurance\"\n\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Subscriber Name\"\n                                name=\"SubscriberName\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n\n\n\n\n                        </Col>\n\n                        <Col className='gutter-row' span={10}>\n\n                            <Form.Item\n                                label=\"Subscriber ID\"\n                                name=\"Sid\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Group Number\"\n                                name=\"GroupNumber\"\n\n                            >\n                                <Input required />\n                            </Form.Item>\n\n\n                        </Col>\n                    </Row>\n\n\n                    <label style={{ fontSize: \"20px\" }} >Chronic Conditions</label>\n                    <br />\n                    <br />\n                    <Form.List\n                        name=\"Conditions\"\n\n                        rules={[\n                            {\n                                validator: async (_, names) => {\n                                    if (!names || names.length < 1) {\n                                        return Promise.reject(new Error('At least 1 condition'));\n                                    }\n                                },\n                            },\n                        ]}\n                    >\n                        {(fields, { add, remove }, { errors }) => (\n                            <>\n                                {fields.map((field, index) => (\n                                    <Form.Item\n\n                                        label={index === 0 ? '' : ''}\n                                        required={false}\n                                        key={field.key}\n                                    >\n                                        <Form.Item\n                                            {...field}\n                                            validateTrigger={['onChange', 'onBlur']}\n                                            rules={[\n                                                {\n                                                    required: true,\n                                                    whitespace: true,\n                                                    message: \"Please input conditions's name or delete this field.\",\n                                                },\n                                            ]}\n                                            noStyle\n                                        >\n                                            <Input placeholder=\"Condition name\" style={{ width: '60%' }} />\n                                        </Form.Item>\n                                        {\"                  \"}\n                                        {fields.length > 1 ? (\n                                            <MinusCircleOutlined\n                                                className=\"dynamic-delete-button\"\n                                                onClick={() => remove(field.name)}\n                                                style={{ fontSize: \"22px\" }}\n                                            />\n                                        ) : null}\n                                    </Form.Item>\n                                ))}\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() => add()}\n                                        style={{ width: '60%' }}\n                                        icon={<PlusOutlined />}\n                                    >\n                                        Add field\n              </Button>\n\n                                    <Form.ErrorList errors={errors} />\n                                </Form.Item>\n                            </>\n                        )}\n                    </Form.List>\n\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                        <Col className='gutter-row' span={10}>\n                            <Form.Item\n                                label=\"Notes\"\n                                name=\"Notes\"\n\n                            >\n                                <TextArea />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n          </Button>\n                    </Form.Item>\n\n                </Form>\n            </Card>\n        </Fragment>\n    )\n}\n\nexport default Addpatient\n\n\n\n\n\n"],"sourceRoot":""}